FROM node:20-alpine AS base\n\n# Install dependencies only when needed\nFROM base AS deps\n# Check https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine \n# to understand why libc6-compat might be needed\nRUN apk add --no-cache libc6-compat\nWORKDIR /app\n\n# Install dependencies based on the preferred package manager\nCOPY package.json yarn.lock* package-lock.json* pnpm-lock.yaml* ./\nRUN \\\n  if [ -f yarn.lock ]; then yarn --frozen-lockfile; \\\n  elif [ -f package-lock.json ]; then npm ci; \\\n  elif [ -f pnpm-lock.yaml ]; then corepack enable pnpm && pnpm i --frozen-lockfile; \\\n  else echo \"Lockfile not found.\" && exit 1; \\\n  fi\n\n\n# Rebuild the source code only when needed\nFROM base AS builder\nWORKDIR /app\nCOPY --from=deps /app/node_modules ./node_modules\nCOPY . .\n\n# Next.js collects completely anonymous telemetry data about general usage.\n# Learn more here: https://nextjs.org/telemetry\n# Uncomment the following line to disable telemetry at build time\nENV NEXT_TELEMETRY_DISABLED=1\n\nRUN npm run build\n\n# Production image, copy all the files and run next start\nFROM base AS runner\nWORKDIR /app\n\nENV NODE_ENV=production\n# Uncomment the following line to disable telemetry at runtime\nENV NEXT_TELEMETRY_DISABLED=1\n\nRUN addgroup --system --gid 1001 nodejs\nRUN adduser --system --uid 1001 nodejs\n\nCOPY --from=builder /app/public ./public\n\n# Set the correct permission for the app directory\nRUN mkdir .next\nRUN chown -R nodejs:nodejs .next\n\n# Copy the built application\nCOPY --from=builder --chown=nodejs:nodejs /app/.next/standalone ./\nCOPY --from=builder --chown=nodejs:nodejs /app/.next/static ./.next/static\n\nCOPY --from=deps --chown=nodejs:nodejs /app/node_modules ./node_modules\nCOPY --from=builder --chown=nodejs:nodejs /app/package.json ./package.json\n\nUSER nodejs\n\nEXPOSE 3000\n\nENV PORT=3000\n\nCMD [\"node\", \"server.js\"]\n